#include <iostream>
using namespace std;

int N, K;
int A[201][201];

void init() {
	for (int i = 1; i <= K; i++) {
		A[1][i] = i; // 1을 i개의 정수로 나타내는 경우의 수 초기화
	}
}

// A[1][1] = 1, A[1][2] = 2, A[1][3] = 3, A[1][4] = 4, A[1][5] = 5 // 항상 (0 개수 j개, j) = j로 나타낼 수 있음
// A[2][1] = 1, A[2][2] = 3, A[2][3] = 6, A[2][4] = 10
// A[2][3] = 0부터 2까지 정수 3개를 더해서 그 합이 2가 되는 경우의 수
// : (0부터 1까지 정수 3개를 더해서 그 합이 1이 되는 경우의 수) 0,0,1 3개
// + (0부터 2까지 정수 2개를 더해서 그 합이 2가 되는 경우의 수) 0,2 / 1,1 3개
// 왜그런건진 모르겠음

// A[i][j] = (A[i-1][k]의 합 (1<=k<=j)
// A[i][j] = 0부터 i까지 정수 j개를 더해서 그 합이 i가 되는 경우의 수

void solve() {
	for (int i = 2; i <= N; i++) {
		for (int j = 1; j <= K; j++) {
			A[i][j] = (A[i - 1][j] + A[i][j - 1]) % 1000000000;
		}
	}

	cout << A[N][K];
}

int main() {
	cin >> N >> K;

	init();
	solve();
}